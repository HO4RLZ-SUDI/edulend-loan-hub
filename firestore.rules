rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if isAdmin() || (isSignedIn() && request.auth.uid == userId);
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isAdmin() || (isSignedIn() && request.auth.uid == userId &&
        request.resource.data.role == resource.data.role);
      allow delete: if isAdmin();
    }

    match /items/{itemId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    match /loans/{loanId} {
      allow read: if isAdmin() || (isSignedIn() && request.auth.uid == resource.data.userId);
      allow create: if isSignedIn() &&
        request.auth.uid == request.resource.data.userId &&
        request.resource.data.status == 'active';
      allow update: if isAdmin() ||
        (isSignedIn() && request.auth.uid == resource.data.userId && request.resource.data.status == 'returned');
      allow delete: if isAdmin();
    }
  }
}
